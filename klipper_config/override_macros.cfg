[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    CG28
    M117 Z-Calibration..
    #_SET_LOWER_STEPPER_CURRENT  # I lower the stepper current for homing and probing 
    CheckProbe action=query
    Attach_Probe    
    BASE_CALIBRATE_Z
    Dock_Probe
    #_RESET_STEPPER_CURRENT      # resetting the stepper current
    M117


# some borrowed from ellis.. I'll edit more later.
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}                                   

	M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	# Set bed temp
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}		# Wait for bed temp

# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
	M104 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={S} MAXIMUM={S|int + 5}


# Wait for chamber temp, kick off wait loop if not already at temp
[gcode_macro M191]
variable_chambertargettemp: 0
gcode:
	# Parameters
	{% set s = params.S|default(1)|float %}
	
	SET_GCODE_VARIABLE MACRO=M191 VARIABLE=chambertargettemp VALUE={s}		   							; set target temp for reference outside of the macro (for the loop)
						
	{% if not printer["temperature_sensor chamber"].temperature >= s|float %}						; ##IF CHAMBER TEMP IS NOT ALREADY REACHED##
		{ action_respond_info("Chamber not at temp yet, pausing...") }					
			{% if not printer.pause_resume.is_paused %}					
				BASE_PAUSE														   							; pause if not already paused
			{% endif %}					
		UPDATE_DELAYED_GCODE ID=M191-WAIT DURATION=5						   							; start wait loop
	{% else %}					
		{ action_respond_info("Chamber at or above temp, continuing...") }     							; ##IF CHAMBER TEMP IS ALREADY REACHED##
		UPDATE_DELAYED_GCODE ID=M191-WAIT DURATION=0                           							; break wait loop if it happens to be running already (shouldn't be)
		{% if printer.pause_resume.is_paused %}					
			BASE_RESUME															   							; resume if paused (shouldn't be)
		{% endif %}					
		PRINT_START2													   								; run part 2 of PRINT_START
	{% endif %}
	
# This part will loop until the desired chamber temp is reached, then resume the print
[delayed_gcode M191-WAIT]
gcode:
	{% if printer["temperature_sensor chamber"].temperature >= printer["gcode_macro M191"].chambertargettemp|float %} ; ##IF CHAMBER TEMP IS REACHED##
		{ action_respond_info("Chamber at or above temp, continuing...") }
			{% if printer.pause_resume.is_paused %}
				BASE_RESUME														   											 ; break loop, resume print
				PRINT_START2											   												 ; run part 2 of PRINT_START
			{% endif %}
	{% else %}																											 ; ##IF CHAMBER TEMP IS NOT YET REACHED##
		{ action_respond_info("Chamber not at temp yet, waiting...") }
		UPDATE_DELAYED_GCODE ID=M191-WAIT DURATION=5						   											 ; continue waiting loop
	{% endif %}
